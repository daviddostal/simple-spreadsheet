Features
========
- Macro functions like IF(...; ...; ...)
- Performance profiling and optimizations
- Add features section to readme
? Spreadsheet functions inside custom functions
?? Parser, lexer and evaluator extensions (custom operators etc)
- More granular error types

Fixes and improvements
======================
- Improve error messages, for example missing closing paren
- Update readme
- Go over and improve tests
- Use stack for evaluator instead of recursive descent to prevent overflow on deep references

Working on currently
====================
- cache errors
- return errors instead of throwing
- cache errors and values together?
- throw only on library boundary (Spreadsheet)

Done
====
✔ Constants like PI, E etc.
✔ Events for cell changes
✔ Add eslint
✔ Better structure for tests
✔ Think about removing builtin functions and just provide them separately
✔ Think about adding constants vs just using functions like PI() (like Excel does) - constants should be just functions (makes stuff simpler)
✔ Think about direction of library (Do we want to be like excel? Or more like a programming language?)
✔ Reference cycle detection
✔ Fix error message for circular references
✔ Rename builtinFunctions
✔ Rewrite tokenizer to use regexes instead of strings
✔ Add relevant new changes to branch



Library goals
=============
- Keep it simple
- Use concepts from Excel
- Not an advanced programming language, but small conveniences here and there
- No first class functions
- Supports first class ranges and "lists"

Example
=SUM(A1:A4, 1:10, "aa":"zz", IF(A5 > 8, -5 + 4, PI()))