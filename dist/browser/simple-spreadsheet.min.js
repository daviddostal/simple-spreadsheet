!function(e){"use strict";class SpreadsheetError extends Error{}class ParsingError extends SpreadsheetError{constructor(e){super(e)}toString(){return`Syntax error: ${this.message}`}}class RuntimeError extends SpreadsheetError{constructor(e){super(e)}toString(){return`Evaluation error: ${this.message}`}}class TokenStream{constructor(e){this._tokens=e,this._currentPos=0}peek(){return this._tokens[this._currentPos]||null}expect(...e){const t=this.peek();return null!==t&&e.includes(t.type)?(this._currentPos++,t):null}require(...e){const t=this.expect(...e);if(null===t)throw new ParsingError(`Unexpected ${this.peek().type}, expected ${e.join(" or ")}`);return t}}const t=Object.freeze({EOF:"end of formula",WHITESPACE:"whitespace",PLUS:"+",MINUS:"-",STAR:"*",SLASH:"/",LPAREN:"opening parenthesis",RPAREN:"closing parenthesis",COLON:":",EQUALS:"=",COMMA:"comma",NUMBER:"number",STRING:"string",IDENTIFIER:"identifier"});class Tokenizer{constructor(){this._rules=[{pattern:/^\d+(?:\.\d+)?/,type:t.NUMBER},{pattern:/^[a-zA-Z]\w+/,type:t.IDENTIFIER},{pattern:/^\s+/,type:t.WHITESPACE},{pattern:/^\+/,type:t.PLUS},{pattern:/^\-/,type:t.MINUS},{pattern:/^\*/,type:t.STAR},{pattern:/^\//,type:t.SLASH},{pattern:/^\(/,type:t.LPAREN},{pattern:/^\)/,type:t.RPAREN},{pattern:/^=/,type:t.EQUALS},{pattern:/^:/,type:t.COLON},{pattern:/^,/,type:t.COMMA},{pattern:/^\"(?:[^"\\]|\\.)*\"/,type:t.STRING},{pattern:/^$/,type:t.EOF}]}tokenize(e){const r=[];let s=e;for(;s.length>0;){const e=this._nextToken(s);r.push(e),s=s.slice(e.value.length)}return r.push({type:t.EOF,value:""}),new TokenStream(r.filter(e=>e.type!==t.WHITESPACE))}_nextToken(e){for(let t of this._rules){const r=e.match(t.pattern);if(null!==r)return{type:t.type,value:r[0]}}throw new ParsingError(`Unknown token at '${e}'`)}}class Expression{}class Value extends Expression{constructor(e){super(),this.value=e}toString(){return this.value.constructor===String?`"${this.value}"`:`${this.value}`}}class Reference extends Expression{constructor(e,t){super(),this.col=e,this.row=t}toString(){return`${this.col}${this.row}`}}class BinaryOp extends Expression{constructor(e,t,r){super(),this.left=e,this.op=t,this.right=r}toString(){return`(${this.left} ${this.op} ${this.right})`}}class UnaryOp extends Expression{constructor(e,t){super(),this.op=e,this.value=t}toString(){return`${this.op}${this.value}`}}class FunctionCall extends Expression{constructor(e,t){super(),this.functionName=e,this.args=t}toString(){return`${this.functionName}(${this.args.join(", ")})`}}class Range extends Expression{constructor(e,t){super(),this.from=e,this.to=t}toString(){return`${this.from}:${this.to}`}}function r(e,t){const r=[];for(let n of s(a(e.col),a(t.col)))for(let i of s(e.row,t.row))r.push({col:o(n),row:i});return r}function s(e,t){return e<=t?Array.from({length:t-e+1},(t,r)=>r+e):Array.from({length:e-t+1},(t,r)=>e-r)}function n(e){const t=e.match(/^([A-Za-z]+)(\d+)$/);return t&&{col:t[1],row:parseInt(t[2])}}function i(e,t){return`${e}${t}`}function a(e){return e.charCodeAt(0)-65}function o(e){return String.fromCharCode(e+65)}var c=Object.freeze({positionsInRange:r,parsePosition:n,makePosition:i,columnIndex:a,columnLetter:o});class Parser{constructor(e){this._tokenizer=e,this._tokens=null}parse(e){if(null==e||e.constructor!==String)return{parsed:new Value(e),references:[]};if(e.trimStart().startsWith("=")){this._tokens=this._tokenizer.tokenize(e),this._tokens.require(t.EQUALS);const r=this._parseExpression();return this._tokens.require(t.EOF),{parsed:r,references:[...new Set(this._getReferences(r))]}}return e.match(/^[+-]?\d+(?:\.\d+)?$/)?{parsed:new Value(parseFloat(e)),references:[]}:{parsed:new Value(e),references:[]}}_parseExpression(){return this._parseTerm()}_parseTerm(){let e,r=this._parseFactor();for(;null!==(e=this._tokens.expect(t.PLUS,t.MINUS));)r=new BinaryOp(r,e.value,this._parseFactor());return r}_parseFactor(){let e,r=this._parseRange();for(;null!==(e=this._tokens.expect(t.STAR,t.SLASH));)r=new BinaryOp(r,e.value,this._parseRange());return r}_parseRange(){return this._parseUnary()}_parseUnary(){const e=this._tokens.expect(t.PLUS,t.MINUS);return null!==e?new UnaryOp(e.value,this._parseUnary()):this._parseValue()}_parseValue(){if(this._tokens.expect(t.LPAREN))return this._finishParenthesized();const e=this._tokens.expect(t.NUMBER);if(null!==e)return new Value(parseFloat(e.value));const r=this._tokens.expect(t.STRING);if(null!==r)return this._parseString(r);const s=this._tokens.expect(t.IDENTIFIER);if(null!==s)return this._tokens.expect(t.COLON)?this._finishRangeReference(s):this._tokens.expect(t.LPAREN)?this._finishFunctionCall(s):this._parseReference(s.value);throw new ParsingError(`Unexpected ${this._tokens.peek().type}, expected an expression or value`)}_finishParenthesized(){const e=this._parseExpression();return this._tokens.require(t.RPAREN),e}_parseString(e){const t=e.value.substring(1,e.value.length-1).replace(/\\(.)/g,"$1");return new Value(t)}_finishRangeReference(e){const r=this._tokens.require(t.IDENTIFIER),s=this._parseReference(e.value),n=this._parseReference(r.value);return new Range(s,n)}_finishFunctionCall(e){const r=this._parseArguments();return this._tokens.expect(t.RPAREN),new FunctionCall(e.value,r)}_parseReference(e){const t=n(e);if(null===t)throw new ParsingError(`Invalid format of cell reference: ${e}`);return new Reference(t.col,t.row)}_parseArguments(){const e=[];for(;this._tokens.peek().type!==t.RPAREN;)0!=e.length&&this._tokens.require(t.COMMA),e.push(this._parseExpression());return e}_getReferences(e){switch(e.constructor){case Value:return[];case Reference:return[i(e.col,e.row)];case UnaryOp:return this._getReferences(e.value);case BinaryOp:return[...this._getReferences(e.left),...this._getReferences(e.right)];case FunctionCall:return e.args.flatMap(e=>this._getReferences(e));case Range:return r(e.from,e.to).map(e=>i(e.col,e.row));default:throw new ParsingError(`Unknown expression type: ${typeof e}`)}}}class CircularReferenceError extends Error{constructor(e,t){super(e),this.cell=t}}class Evaluator{constructor(){this.visitedCellStack=[]}evaluateCellAt(e,t,r){if(this.visitedCellStack.includes(e))throw new CircularReferenceError(`Circular reference detected (${this.visitedCellStack.join(" -> ")} -> ${e})`,t);this.visitedCellStack.push(e);try{const e=this._evaluateCell(t,r);return this.visitedCellStack.pop(),e}catch(e){throw this.visitedCellStack.pop(),e instanceof CircularReferenceError&&e.cell===t?new RuntimeError(e.message):e}}evaluateQuery(e,t){return this._evaluateCell(e,t)}_evaluateCell(e,t){switch(e.constructor){case Value:return e.value;case Reference:return this._evaluateReference(i(e.col,e.row),t);case UnaryOp:return this._evaluateUnary(e.op,e.value,t);case BinaryOp:return this._evaluateBinary(e.left,e.op,e.right,t);case FunctionCall:return this._evaluateFunction(e.functionName,e.args,t);case Range:throw new RuntimeError("Range references are allowed only as arguments of functions");default:throw new RuntimeError(`Unknown expression type: ${typeof e}`)}}_evaluateReference(e,t){try{return t.getValue(e)}catch(t){throw t instanceof ParsingError||t instanceof RuntimeError?new RuntimeError(`Error in referenced cell ${e}`):t}}_evaluateExpression(e,t){switch(e.constructor){case Range:return this._evaluateRange(e.from,e.to,t);default:return this._evaluateCell(e,t)}}_evaluateUnary(e,t,r){const s=this._evaluateCell(t,r);switch(e){case"+":return s;case"-":return-s;default:throw new RuntimeError(`Unknown unary operator: '${e}'`)}}_evaluateBinary(e,t,r,s){const n=this._evaluateCell(e,s),i=this._evaluateCell(r,s);switch(t){case"+":return n+i;case"-":return n-i;case"*":return n*i;case"/":return n/i;default:throw new RuntimeError(`Unknown binary operator: '${t}'`)}}_evaluateFunction(e,t,r){const s=r.getFunction(e);try{return s(...t.map(e=>this._evaluateExpression(e,r)))}catch(t){throw new RuntimeError(`Error in function ${e}: ${t}`)}}_evaluateRange(e,t,s){return r(e,t).map(e=>i(e.col,e.row)).map(e=>this._evaluateReference(e,s))}}class ReferencesMap{constructor(){this._referencesFrom={},this._referencesTo={}}getReferencesFrom(e){return this._referencesFrom[e]}getReferencesTo(e){return this._referencesTo[e]}addReference(e,t){this._referencesFrom[e]||(this._referencesFrom[e]=[]),this._referencesFrom[e].push(t),this._referencesTo[t]||(this._referencesTo[t]=[]),this._referencesTo[t].push(e)}removeReferencesFrom(e){const t=this._referencesFrom[e];for(let r of t){const t=this._referencesTo[r].indexOf(e);t>-1&&this._referencesTo[r].splice(t,1)}delete this._referencesFrom[e]}getAffectedCells(e){const t=this.getReferencesTo(e);if(!t)return[];const r=t.flatMap(this.getAffectedCells.bind(this));return[...t,...r]}}class Environment{constructor(e=new Map,t={},r=(()=>{})){this.cells=e,this.functions=t,this.onCellsChanged=r,this._parser=new Parser(new Tokenizer),this._evaluator=new Evaluator,this._expressionsCache=new Map,this._valuesCache=new Map,this._referencesMap=new ReferencesMap}getText(e){return this.cells.has(e)?this.cells.get(e).toString():""}setText(e,t){this.cells.set(e,t);const r=[e,...this._referencesMap.getAffectedCells(e)];for(let e of r)this._valuesCache.delete(e);this._expressionsCache.delete(e),this._referencesMap.getReferencesFrom(e)&&this._referencesMap.removeReferencesFrom(e),this.onCellsChanged(r)}getExpression(e){if(this._expressionsCache.has(e))return this._expressionsCache.get(e);const t=this.cells.has(e)?this.cells.get(e):null,{parsed:r,references:s}=this._parser.parse(t);this._expressionsCache.set(e,r);for(let t of s)this._referencesMap.addReference(e,t);return r}getValue(e){if(this._valuesCache.has(e))return this._valuesCache.get(e);const t=this._evaluator.evaluateCellAt(e,this.getExpression(e),this);return this._valuesCache.set(e,t),t}evaluateQuery(e){const{parsed:t,_:r}=this._parser.parse(e);return this._evaluator.evaluateQuery(t,this)}getFunction(e){if(void 0===this.functions[e])throw new RuntimeError(`Unknown function: ${e}`);return this.functions[e]}}e.Helpers=c,e.ParsingError=ParsingError,e.RuntimeError=RuntimeError,e.Spreadsheet=class Spreadsheet{constructor(e=new Map,t={},r){this.cells=e instanceof Map?e:new Map(Object.entries(e)),this._environment=new Environment(this.cells,t,r)}text(e){return this._environment.getText(e)}set(e,t){this._environment.setText(e,t)}value(e){return this._environment.getValue(e)}query(e){return this._environment.evaluateQuery(e)}},e.SpreadsheetError=SpreadsheetError}(this.SimpleSpreadsheet=this.SimpleSpreadsheet||{});
//# sourceMappingURL=simple-spreadsheet.min.js.map
