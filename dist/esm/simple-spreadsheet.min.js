class SpreadsheetError extends Error{}class ParsingError extends SpreadsheetError{constructor(e){super(e)}toString(){return`Syntax error: ${this.message}`}}class RuntimeError extends SpreadsheetError{constructor(e){super(e)}toString(){return`Evaluation error: ${this.message}`}}class TokenStream{constructor(e){this._tokens=e,this._currentPos=0}peek(){return this._tokens[this._currentPos]||null}expect(...e){const t=this.peek();return null!==t&&e.includes(t.type)?(this._currentPos++,t):null}require(...e){const t=this.expect(...e);if(null===t)throw new ParsingError(`Unexpected ${this.peek().type}, expected ${e.join(" or ")}`);return t}}const e=Object.freeze({EOF:"end of formula",WHITESPACE:"whitespace",PLUS:"+",MINUS:"-",STAR:"*",SLASH:"/",LPAREN:"opening parenthesis",RPAREN:"closing parenthesis",COLON:":",EQUALS:"=",COMMA:"comma",NUMBER:"number",STRING:"string",IDENTIFIER:"identifier"});class Tokenizer{constructor(){this._rules=[{pattern:/^\d+(?:\.\d+)?/,type:e.NUMBER},{pattern:/^[a-zA-Z]\w+/,type:e.IDENTIFIER},{pattern:/^\s+/,type:e.WHITESPACE},{pattern:/^\+/,type:e.PLUS},{pattern:/^\-/,type:e.MINUS},{pattern:/^\*/,type:e.STAR},{pattern:/^\//,type:e.SLASH},{pattern:/^\(/,type:e.LPAREN},{pattern:/^\)/,type:e.RPAREN},{pattern:/^=/,type:e.EQUALS},{pattern:/^:/,type:e.COLON},{pattern:/^,/,type:e.COMMA},{pattern:/^\"(?:[^"\\]|\\.)*\"/,type:e.STRING},{pattern:/^$/,type:e.EOF}]}tokenize(t){const r=[];let s=t;for(;s.length>0;){const e=this._nextToken(s);r.push(e),s=s.slice(e.value.length)}return r.push({type:e.EOF,value:""}),new TokenStream(r.filter(t=>t.type!==e.WHITESPACE))}_nextToken(e){for(let t of this._rules){const r=e.match(t.pattern);if(null!==r)return{type:t.type,value:r[0]}}throw new ParsingError(`Unknown token at '${e}'`)}}class Expression{}class Value extends Expression{constructor(e){super(),this.value=e}toString(){return this.value.constructor===String?`"${this.value}"`:`${this.value}`}}class Reference extends Expression{constructor(e,t){super(),this.col=e,this.row=t}toString(){return`${this.col}${this.row}`}}class BinaryOp extends Expression{constructor(e,t,r){super(),this.left=e,this.op=t,this.right=r}toString(){return`(${this.left} ${this.op} ${this.right})`}}class UnaryOp extends Expression{constructor(e,t){super(),this.op=e,this.value=t}toString(){return`${this.op}${this.value}`}}class FunctionCall extends Expression{constructor(e,t){super(),this.functionName=e,this.args=t}toString(){return`${this.functionName}(${this.args.join(", ")})`}}class Range extends Expression{constructor(e,t){super(),this.from=e,this.to=t}toString(){return`${this.from}:${this.to}`}}function t(e,t){const s=[];for(let n of r(i(e.col),i(t.col)))for(let i of r(e.row,t.row))s.push({col:a(n),row:i});return s}function r(e,t){return e<=t?Array.from({length:t-e+1},(t,r)=>r+e):Array.from({length:e-t+1},(t,r)=>e-r)}function s(e){const t=e.match(/^([A-Za-z]+)(\d+)$/);return t&&{col:t[1],row:parseInt(t[2])}}function n(e,t){return`${e}${t}`}function i(e){return e.charCodeAt(0)-65}function a(e){return String.fromCharCode(e+65)}var o=Object.freeze({positionsInRange:t,parsePosition:s,makePosition:n,columnIndex:i,columnLetter:a});class Parser{constructor(e){this._tokenizer=e,this._tokens=null}parse(t){if(null==t||t.constructor!==String)return{parsed:new Value(t),references:[]};if(t.trimStart().startsWith("=")){this._tokens=this._tokenizer.tokenize(t),this._tokens.require(e.EQUALS);const r=this._parseExpression();return this._tokens.require(e.EOF),{parsed:r,references:[...new Set(this._getReferences(r))]}}return t.match(/^[+-]?\d+(?:\.\d+)?$/)?{parsed:new Value(parseFloat(t)),references:[]}:{parsed:new Value(t),references:[]}}_parseExpression(){return this._parseTerm()}_parseTerm(){let t,r=this._parseFactor();for(;null!==(t=this._tokens.expect(e.PLUS,e.MINUS));)r=new BinaryOp(r,t.value,this._parseFactor());return r}_parseFactor(){let t,r=this._parseRange();for(;null!==(t=this._tokens.expect(e.STAR,e.SLASH));)r=new BinaryOp(r,t.value,this._parseRange());return r}_parseRange(){return this._parseUnary()}_parseUnary(){const t=this._tokens.expect(e.PLUS,e.MINUS);return null!==t?new UnaryOp(t.value,this._parseUnary()):this._parseValue()}_parseValue(){if(this._tokens.expect(e.LPAREN))return this._finishParenthesized();const t=this._tokens.expect(e.NUMBER);if(null!==t)return new Value(parseFloat(t.value));const r=this._tokens.expect(e.STRING);if(null!==r)return this._parseString(r);const s=this._tokens.expect(e.IDENTIFIER);if(null!==s)return this._tokens.expect(e.COLON)?this._finishRangeReference(s):this._tokens.expect(e.LPAREN)?this._finishFunctionCall(s):this._parseReference(s.value);throw new ParsingError(`Unexpected ${this._tokens.peek().type}, expected an expression or value`)}_finishParenthesized(){const t=this._parseExpression();return this._tokens.require(e.RPAREN),t}_parseString(e){const t=e.value.substring(1,e.value.length-1).replace(/\\(.)/g,"$1");return new Value(t)}_finishRangeReference(t){const r=this._tokens.require(e.IDENTIFIER),s=this._parseReference(t.value),n=this._parseReference(r.value);return new Range(s,n)}_finishFunctionCall(t){const r=this._parseArguments();return this._tokens.expect(e.RPAREN),new FunctionCall(t.value,r)}_parseReference(e){const t=s(e);if(null===t)throw new ParsingError(`Invalid format of cell reference: ${e}`);return new Reference(t.col,t.row)}_parseArguments(){const t=[];for(;this._tokens.peek().type!==e.RPAREN;)0!=t.length&&this._tokens.require(e.COMMA),t.push(this._parseExpression());return t}_getReferences(e){switch(e.constructor){case Value:return[];case Reference:return[n(e.col,e.row)];case UnaryOp:return this._getReferences(e.value);case BinaryOp:return[...this._getReferences(e.left),...this._getReferences(e.right)];case FunctionCall:return e.args.flatMap(e=>this._getReferences(e));case Range:return t(e.from,e.to).map(e=>n(e.col,e.row));default:throw new ParsingError(`Unknown expression type: ${typeof e}`)}}}class CircularReferenceError extends Error{constructor(e,t){super(e),this.cell=t}}class Evaluator{constructor(){this.visitedCellStack=[]}evaluateCellAt(e,t,r){if(this.visitedCellStack.includes(e))throw new CircularReferenceError(`Circular reference detected (${this.visitedCellStack.join(" -> ")} -> ${e})`,t);this.visitedCellStack.push(e);try{const e=this._evaluateCell(t,r);return this.visitedCellStack.pop(),e}catch(e){throw this.visitedCellStack.pop(),e instanceof CircularReferenceError&&e.cell===t?new RuntimeError(e.message):e}}evaluateQuery(e,t){return this._evaluateCell(e,t)}_evaluateCell(e,t){switch(e.constructor){case Value:return e.value;case Reference:return this._evaluateReference(n(e.col,e.row),t);case UnaryOp:return this._evaluateUnary(e.op,e.value,t);case BinaryOp:return this._evaluateBinary(e.left,e.op,e.right,t);case FunctionCall:return this._evaluateFunction(e.functionName,e.args,t);case Range:throw new RuntimeError("Range references are allowed only as arguments of functions");default:throw new RuntimeError(`Unknown expression type: ${typeof e}`)}}_evaluateReference(e,t){try{return t.getValue(e)}catch(t){throw t instanceof ParsingError||t instanceof RuntimeError?new RuntimeError(`Error in referenced cell ${e}`):t}}_evaluateExpression(e,t){switch(e.constructor){case Range:return this._evaluateRange(e.from,e.to,t);default:return this._evaluateCell(e,t)}}_evaluateUnary(e,t,r){const s=this._evaluateCell(t,r);switch(e){case"+":return s;case"-":return-s;default:throw new RuntimeError(`Unknown unary operator: '${e}'`)}}_evaluateBinary(e,t,r,s){const n=this._evaluateCell(e,s),i=this._evaluateCell(r,s);switch(t){case"+":return n+i;case"-":return n-i;case"*":return n*i;case"/":return n/i;default:throw new RuntimeError(`Unknown binary operator: '${t}'`)}}_evaluateFunction(e,t,r){const s=r.getFunction(e);try{return s(...t.map(e=>this._evaluateExpression(e,r)))}catch(t){throw new RuntimeError(`Error in function ${e}: ${t}`)}}_evaluateRange(e,r,s){return t(e,r).map(e=>n(e.col,e.row)).map(e=>this._evaluateReference(e,s))}}class ReferencesMap{constructor(){this._referencesFrom={},this._referencesTo={}}getReferencesFrom(e){return this._referencesFrom[e]}getReferencesTo(e){return this._referencesTo[e]}addReference(e,t){this._referencesFrom[e]||(this._referencesFrom[e]=[]),this._referencesFrom[e].push(t),this._referencesTo[t]||(this._referencesTo[t]=[]),this._referencesTo[t].push(e)}removeReferencesFrom(e){const t=this._referencesFrom[e];for(let r of t){const t=this._referencesTo[r].indexOf(e);t>-1&&this._referencesTo[r].splice(t,1)}delete this._referencesFrom[e]}getAffectedCells(e){const t=this.getReferencesTo(e);if(!t)return[];const r=t.flatMap(this.getAffectedCells.bind(this));return[...t,...r]}}class Environment{constructor(e={},t={},r=(()=>{})){this.cells=e,this.functions=t,this.cellsChangedListener=r,this._parser=new Parser(new Tokenizer),this._evaluator=new Evaluator,this._expressionsCache={},this._valuesCache={},this._referencesMap=new ReferencesMap}getText(e){return this.cells.hasOwnProperty(e)?this.cells[e].toString():""}setText(e,t){this.cells[e]=t;const r=[e,...this._referencesMap.getAffectedCells(e)];for(let e of r)delete this._valuesCache[e];delete this._expressionsCache[e],this._referencesMap.getReferencesFrom(e)&&this._referencesMap.removeReferencesFrom(e),this.cellsChangedListener(r)}getExpression(e){if(this._expressionsCache.hasOwnProperty(e))return this._expressionsCache[e];const t=this.cells.hasOwnProperty(e)?this.cells[e]:null,{parsed:r,references:s}=this._parser.parse(t);this._expressionsCache[e]=r;for(let t of s)this._referencesMap.addReference(e,t);return r}getValue(e){if(this._valuesCache.hasOwnProperty(e))return this._valuesCache[e];const t=this._evaluator.evaluateCellAt(e,this.getExpression(e),this);return this._valuesCache[e]=t,t}evaluateQuery(e){const{parsed:t,_:r}=this._parser.parse(e);return this._evaluator.evaluateQuery(t,this)}getFunction(e){if(void 0===this.functions[e])throw new RuntimeError(`Unknown function: ${e}`);return this.functions[e]}}class Spreadsheet{constructor(e={},t={},r){this.cells=e,this._environment=new Environment(this.cells,t,r)}text(e){return this._environment.getText(e)}set(e,t){this._environment.setText(e,t)}value(e){return this._environment.getValue(e)}query(e){return this._environment.evaluateQuery(e)}}export{o as Helpers,ParsingError,RuntimeError,Spreadsheet,SpreadsheetError};
//# sourceMappingURL=simple-spreadsheet.min.js.map
