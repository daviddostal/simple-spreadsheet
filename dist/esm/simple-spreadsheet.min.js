class SpreadsheetError extends Error{}class ParsingError extends SpreadsheetError{constructor(e){super(e)}toString(){return`Syntax error: ${this.message}`}}class RuntimeError extends SpreadsheetError{constructor(e){super(e)}toString(){return`Evaluation error: ${this.message}`}}class TokenStream{constructor(e){this._tokens=e,this._currentPos=0}peek(){return this._tokens[this._currentPos]||null}expect(...e){const t=this.peek();return null!==t&&e.includes(t.type)?(this._currentPos++,t):null}require(...e){const t=this.expect(...e);if(null===t)throw new ParsingError(`Unexpected ${this.peek().type.description}, expected ${e.map(e=>e.description).join(" or ")}`);return t}}const e=Object.freeze({EOF:Symbol("end of formula"),WHITESPACE:Symbol("whitespace"),PLUS:Symbol("+"),MINUS:Symbol("-"),STAR:Symbol("*"),SLASH:Symbol("/"),LPAREN:Symbol("opening parenthesis"),RPAREN:Symbol("closing parenthesis"),COLON:Symbol(":"),EQUALS:Symbol("="),COMMA:Symbol("comma"),NUMBER:Symbol("number"),STRING:Symbol("string"),IDENTIFIER:Symbol("identifier")});class Tokenizer{constructor(){this._rules=[{pattern:/^\d+(?:\.\d+)?/,type:e.NUMBER},{pattern:/^[a-zA-Z]\w+/,type:e.IDENTIFIER},{pattern:/^"(?:[^"\\]|\\.)*"/,type:e.STRING},{pattern:/^$/,type:e.EOF}],this._operators={" ":e.WHITESPACE,"\t":e.WHITESPACE,"\r":e.WHITESPACE,"\n":e.WHITESPACE,"+":e.PLUS,"-":e.MINUS,"*":e.STAR,"/":e.SLASH,"(":e.LPAREN,")":e.RPAREN,"=":e.EQUALS,":":e.COLON,",":e.COMMA}}tokenize(t){const r=[];let n=t;for(;n.length>0;){const e=this._nextToken(n);r.push(e),n=n.slice(e.value.length)}return r.push({type:e.EOF,value:""}),new TokenStream(r.filter(t=>t.type!==e.WHITESPACE))}_nextToken(e){const t=e[0],r=this._operators[t];if(void 0!==r)return{type:r,value:t};for(let t of this._rules){const r=e.match(t.pattern);if(null!==r)return{type:t.type,value:r[0]}}throw new ParsingError(`Unknown token at '${e}'`)}}class Expression{}class Value extends Expression{constructor(e){super(),this.value=e}toString(){return this.value.constructor===String?`"${this.value}"`:`${this.value}`}}class Reference extends Expression{constructor(e,t){super(),this.col=e,this.row=t}toString(){return`${this.col}${this.row}`}}class BinaryOp extends Expression{constructor(e,t,r){super(),this.left=e,this.op=t,this.right=r}toString(){return`(${this.left} ${this.op} ${this.right})`}}class UnaryOp extends Expression{constructor(e,t){super(),this.op=e,this.value=t}toString(){return`${this.op}${this.value}`}}class FunctionCall extends Expression{constructor(e,t){super(),this.functionName=e,this.args=t}toString(){return`${this.functionName}(${this.args.join(", ")})`}}class Range extends Expression{constructor(e,t){super(),this.from=e,this.to=t}toString(){return`${this.from}:${this.to}`}}function t(e,t){const n=[];for(let s of r(o(e.col),o(t.col)))for(let o of r(e.row,t.row))n.push({col:a(s),row:o});return n}function r(e,t){return e<=t?Array.from({length:t-e+1},(t,r)=>r+e):Array.from({length:e-t+1},(t,r)=>e-r)}function n(e){const t=e.match(/^([A-Za-z]+)(\d+)$/);return t&&{col:t[1],row:parseInt(t[2])}}function s(e,t){return`${e}${t}`}function o(e){return e.charCodeAt(0)-65}function a(e){return String.fromCharCode(e+65)}var i=Object.freeze({positionsInRange:t,parsePosition:n,makePosition:s,columnIndex:o,columnLetter:a});class Parser{constructor(e){this._tokenizer=e,this._tokens=null}parse(t){if(!(null!=t&&t.constructor===String))return{parsed:new Value(t),references:[]};if("="===t[0]){this._tokens=this._tokenizer.tokenize(t),this._tokens.require(e.EQUALS);const r=this._parseExpression();return this._tokens.require(e.EOF),{parsed:r,references:this._referencesIn(r)}}return t.match(/^[+-]?\d+(?:\.\d+)?$/)?{parsed:new Value(parseFloat(t)),references:[]}:{parsed:new Value(t),references:[]}}_parseExpression(){return this._parseTerm()}_parseTerm(){let t,r=this._parseFactor();for(;null!==(t=this._tokens.expect(e.PLUS,e.MINUS));)r=new BinaryOp(r,t.value,this._parseFactor());return r}_parseFactor(){let t,r=this._parseRange();for(;null!==(t=this._tokens.expect(e.STAR,e.SLASH));)r=new BinaryOp(r,t.value,this._parseRange());return r}_parseRange(){return this._parseUnary()}_parseUnary(){const t=this._tokens.expect(e.PLUS,e.MINUS);return null!==t?new UnaryOp(t.value,this._parseUnary()):this._parseValue()}_parseValue(){if(this._tokens.expect(e.LPAREN))return this._finishParenthesized();const t=this._tokens.expect(e.NUMBER);if(null!==t)return new Value(parseFloat(t.value));const r=this._tokens.expect(e.STRING);if(null!==r)return this._parseString(r);const n=this._tokens.expect(e.IDENTIFIER);if(null!==n)return this._tokens.expect(e.COLON)?this._finishRangeReference(n):this._tokens.expect(e.LPAREN)?this._finishFunctionCall(n):this._parseReference(n.value);throw new ParsingError(`Unexpected ${this._tokens.peek().type.description}, expected an expression or value`)}_finishParenthesized(){const t=this._parseExpression();return this._tokens.require(e.RPAREN),t}_parseString(e){const t=e.value.substring(1,e.value.length-1).replace(/\\(.)/g,"$1");return new Value(t)}_finishRangeReference(t){const r=this._tokens.require(e.IDENTIFIER),n=this._parseReference(t.value),s=this._parseReference(r.value);return new Range(n,s)}_finishFunctionCall(t){const r=this._parseArguments();return this._tokens.expect(e.RPAREN),new FunctionCall(t.value,r)}_parseReference(e){const t=n(e);if(null===t)throw new ParsingError(`Invalid format of cell reference: ${e}`);return new Reference(t.col,t.row)}_parseArguments(){const t=[];for(;this._tokens.peek().type!==e.RPAREN;)0!=t.length&&this._tokens.require(e.COMMA),t.push(this._parseExpression());return t}_referencesIn(e){switch(e.constructor){case Value:return[];case Reference:return[s(e.col,e.row)];case UnaryOp:return this._referencesIn(e.value);case BinaryOp:return[...this._referencesIn(e.left),...this._referencesIn(e.right)];case FunctionCall:return e.args.flatMap(e=>this._referencesIn(e));case Range:return t(e.from,e.to).map(e=>s(e.col,e.row));default:throw new ParsingError(`Unknown expression type: ${typeof e}`)}}}class CircularReferenceError extends Error{constructor(e,t){super(e),this.cell=t}}class Evaluator{constructor(){this.visitedCellStack=[]}evaluateCellAt(e,t,r){if(this.visitedCellStack.includes(e))throw new CircularReferenceError(`Circular reference detected (${this.visitedCellStack.join(" -> ")} -> ${e})`,t);this.visitedCellStack.push(e);try{const e=this._evaluateCell(t,r);return this.visitedCellStack.pop(),e}catch(e){throw this.visitedCellStack.pop(),e instanceof CircularReferenceError&&e.cell===t?new RuntimeError(e.message):e}}evaluateQuery(e,t){return this._evaluateCell(e,t)}_evaluateCell(e,t){switch(e.constructor){case Value:return e.value;case Reference:return this._evaluateReference(s(e.col,e.row),t);case UnaryOp:return this._evaluateUnary(e.op,e.value,t);case BinaryOp:return this._evaluateBinary(e.left,e.op,e.right,t);case FunctionCall:return this._evaluateFunction(e.functionName,e.args,t);case Range:throw new RuntimeError("Range references are allowed only as arguments of functions");default:throw new RuntimeError(`Unknown expression type: ${typeof e}`)}}_evaluateReference(e,t){try{return t.getValue(e)}catch(t){throw t instanceof ParsingError||t instanceof RuntimeError?new RuntimeError(`Error in referenced cell ${e}`):t}}_evaluateExpression(e,t){switch(e.constructor){case Range:return this._evaluateRange(e.from,e.to,t);default:return this._evaluateCell(e,t)}}_evaluateUnary(e,t,r){const n=this._evaluateCell(t,r);switch(e){case"+":return n;case"-":return-n;default:throw new RuntimeError(`Unknown unary operator: '${e}'`)}}_evaluateBinary(e,t,r,n){const s=this._evaluateCell(e,n),o=this._evaluateCell(r,n);switch(t){case"+":return s+o;case"-":return s-o;case"*":return s*o;case"/":return s/o;default:throw new RuntimeError(`Unknown binary operator: '${t}'`)}}_evaluateFunction(e,t,r){let n=r.getFunction(e);return!0===(n=n instanceof Function?{isMacro:!1,function:n}:n).isMacro?this._evaluateMacro(e,n,t,r):this._evaluateSpreadsheetFunction(e,n,t,r)}_evaluateSpreadsheetFunction(e,t,r,n){const s=this._evaluateArguments(e,r,n);try{return t.function(...s)}catch(t){throw new RuntimeError(`Error in function ${e}: ${t}`)}}_evaluateArguments(e,t,r){let n=[];for(let s=0;s<t.length;s++)try{n.push(this._evaluateExpression(t[s],r))}catch(t){throw new RuntimeError(`Error in function argument ${s+1} in function ${e}: ${t}`)}return n}_evaluateMacro(e,t,r,n){const s=r.map(e=>()=>this._evaluateExpression(e,n));try{return t.function(...s)}catch(t){throw new RuntimeError(`Error in macro ${e}: ${t}`)}}_evaluateRange(e,r,n){return t(e,r).map(e=>s(e.col,e.row)).map(e=>this._evaluateReference(e,n))}}class ReferencesMap{constructor(){this._referencesFrom=new Map,this._referencesTo=new Map}addReferences(e,t){this._referencesFrom.has(e)||this._referencesFrom.set(e,new Set(t));for(let r of t)this._referencesFrom.get(e).add(r),this._referencesTo.has(r)||this._referencesTo.set(r,new Set),this._referencesTo.get(r).add(e)}removeReferencesFrom(e){const t=this._referencesFrom.get(e);if(t){for(let r of t)this._referencesTo.get(r).delete(e);this._referencesFrom.delete(e)}}cellsDependingOn(e){const t=new Set,r=[e];for(;r.length>0;){const e=r.pop();t.add(e);const n=(this._referencesTo.has(e)?[...this._referencesTo.get(e)].filter(e=>!t.has(e)):[]).filter(e=>!t.has(e));r.push(...n)}return t}}class Environment{constructor(e,t,r){this.cells=e,this.functions=t,this.onCellsChanged=r,this._parser=new Parser(new Tokenizer),this._evaluator=new Evaluator,this._expressionsCache=new Map,this._valuesCache=new Map,this._referencesMap=new ReferencesMap}getText(e){return this.cells.has(e)?this.cells.get(e).toString():""}setText(e,t){this.cells.set(e,t);const r=this._referencesMap.cellsDependingOn(e);for(let e of r)this._valuesCache.delete(e);this._expressionsCache.delete(e),this._referencesMap.removeReferencesFrom(e),this.onCellsChanged([...r])}getExpression(e){if(this._expressionsCache.has(e))return this._expressionsCache.get(e);const t=this.cells.has(e)?this.cells.get(e):null,{parsed:r,references:n}=this._parser.parse(t);return this._expressionsCache.set(e,r),this._referencesMap.addReferences(e,n),r}getValue(e){if(this._valuesCache.has(e))return this._valuesCache.get(e);const t=this._evaluator.evaluateCellAt(e,this.getExpression(e),this);return this._valuesCache.set(e,t),t}evaluateQuery(e){const{parsed:t,_:r}=this._parser.parse(e);return this._evaluator.evaluateQuery(t,this)}getFunction(e){if(!this.functions.has(e))throw new RuntimeError(`Unknown function: ${e}`);return this.functions.get(e)}}class Spreadsheet{constructor(e=new Map,t=new Map,r=(()=>{})){this.cells=e instanceof Map?e:new Map(Object.entries(e)),this.functions=t instanceof Map?t:new Map(Object.entries(t)),this._environment=new Environment(this.cells,this.functions,r)}text(e){return this._environment.getText(e)}set(e,t){this._environment.setText(e,t)}value(e){return this._environment.getValue(e)}query(e){return this._environment.evaluateQuery(e)}}export{i as Helpers,ParsingError,RuntimeError,Spreadsheet,SpreadsheetError};
//# sourceMappingURL=simple-spreadsheet.min.js.map
