!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e=e||self).SimpleSpreadsheet={})}(this,function(e){"use strict";class SpreadsheetError extends Error{}class ParsingError extends SpreadsheetError{constructor(e){super(e)}toString(){return`Syntax error: ${this.message}`}}class RuntimeError extends SpreadsheetError{constructor(e){super(e)}toString(){return`Evaluation error: ${this.message}`}}const r=Object.freeze({EOF:"EOF",WHITESPACE:"WHITESPACE",PLUS:"PLUS",MINUS:"MINUS",STAR:"STAR",SLASH:"SLASH",LPAREN:"LPAREN",RPAREN:"RPAREN",COLON:"COLON",EQUALS:"EQUALS",COMMA:"COMMA",NUMBER:"NUMBER",STRING:"STRING",IDENTIFIER:"IDENTIFIER"});class Tokenizer{constructor(){this.rules={"\\d+(?:\\.\\d+)?":r.NUMBER,"[a-zA-Z]\\w+":r.IDENTIFIER,"\\s+":r.WHITESPACE,"\\+":r.PLUS,"-":r.MINUS,"\\*":r.STAR,"\\/":r.SLASH,"\\(":r.LPAREN,"\\)":r.RPAREN,"=":r.EQUALS,":":r.COLON,",":r.COMMA,'\\"(?:[^"\\\\]|\\\\.)*\\"':r.STRING,$:r.EOF}}begin(e){return this.remaining=e,this}next(){const e=this.peek();return this.remaining=this.remaining.slice(e.value.length),e}peek(){for(let e in this.rules){const r=this.remaining.match(new RegExp("^"+e));if(null!==r)return{type:this.rules[e],value:r[0]}}throw new ParsingError(`Unknown token '${this.remaining}'`)}rest(){const e=this.remaining;return this.remaining="",e}}class Expression{}class Value extends Expression{constructor(e){super(),this.value=e}toString(){return this.value.constructor===String?`"${this.value}"`:`${this.value}`}}class Reference extends Expression{constructor(e,r){super(),this.col=e,this.row=r}toString(){return`Reference(${this.col}${this.row})`}}class BinaryOp extends Expression{constructor(e,r,t){super(),this.left=e,this.op=r,this.right=t}toString(){return`BinaryOp(${this.left} ${this.op} ${this.right})`}}class UnaryOp extends Expression{constructor(e,r){super(),this.op=e,this.value=r}toString(){return`UnaryOp(${this.op} ${this.value})`}}class FunctionCall extends Expression{constructor(e,r){super(),this.functionName=e,this.args=r}toString(){return`FunctionCall(${this.functionName}, ${this.args.join(", ")})`}}class Range extends Expression{constructor(e,r){super(),this.from=e,this.to=r}toString(){return`Range(${this.from}, ${this.to})`}}function t(e,r){const t=[];for(let s of n(a(e.col),a(r.col)))for(let i of n(e.row,r.row))t.push({col:o(s),row:i});return t}function n(e,r){return e<=r?Array.from({length:r-e+1},(r,t)=>t+e):Array.from({length:e-r+1},(r,t)=>e-t)}function s(e){const r=e.match(/^([A-Za-z]+)(\d+)$/);return null===r?null:{col:r[1],row:parseInt(r[2])}}function i(e,r){return`${e}${r}`}function a(e){return e.charCodeAt(0)-65}function o(e){return String.fromCharCode(e+65)}var u=Object.freeze({positionsInRange:t,parseRange:function(e){const[r,t]=e.split(":");return{from:s(r),to:s(t)}},makeRange:function(e,r){return`${e}:${r}`},parsePosition:s,makePosition:i,columnIndex:a,columnLetter:o});class Parser{constructor(e){this.tokens=e}parse(e){if(null==e||e.constructor!==String)return{parsed:new Value(e),references:[]};this.tokens.begin(e);const r=this._parseCell();return{parsed:r,references:[...new Set(this._getReferences(r))]}}_parseCell(){if(this.tokens.remaining.startsWith("=")){this._expectAny(r.EQUALS);const e=this._parseExpression();return this._require(r.EOF),e}return this._parseSimpleValue()}_parseSimpleValue(){const e=this.tokens.rest();return e.match(/^[+-]?\d+(?:\.\d+)?$/)?new Value(parseFloat(e)):new Value(e)}_parseExpression(){return this._parseTerm()}_parseTerm(){let e,t=this._parseFactor();for(;null!==(e=this._expectAny(r.PLUS,r.MINUS));)t=new BinaryOp(t,e.value,this._parseFactor());return t}_parseFactor(){let e,t=this._parseUnary();for(;null!==(e=this._expectAny(r.STAR,r.SLASH));)t=new BinaryOp(t,e.value,this._parseUnary());return t}_parseUnary(){let e=this._expectAny(r.PLUS,r.MINUS);return null!==e?new UnaryOp(e.value,this._parseUnary()):this._parseValue()}_parseValue(){if(this._expectAny(r.LPAREN))return this._parseParenthesized();const e=this._expectAny(r.NUMBER);if(null!==e)return this._parseNumber(e);const t=this._expectAny(r.STRING);if(null!==t)return this._parseString(t);const n=this._require(r.IDENTIFIER);return null!==n&&this._expectAny(r.COLON)?this._parseRangeReference(n):this._expectAny(r.LPAREN)?this._parseFunctionCall(n):this._parseReference(n.value)}_parseParenthesized(){const e=this._parseExpression();return this._require(r.RPAREN),e}_parseNumber(e){return new Value(parseFloat(e.value))}_parseString(e){const r=e.value.substring(1,e.value.length-1).replace(/\\(.)/g,"$1");return new Value(r)}_parseRangeReference(e){const t=this._require(r.IDENTIFIER),n=this._parseReference(e.value),s=this._parseReference(t.value);return new Range(n,s)}_parseFunctionCall(e){let t=e.value;do{const e=this._parseArguments();t=new FunctionCall(t,e)}while(this._expectAny(r.LPAREN));return t}_parseReference(e){const r=s(e);if(null===r)throw new ParsingError(`Invalid format of cell reference: ${e}`);return new Reference(r.col,r.row)}_parseArguments(){const e=[];for(;!this._expectAny(r.RPAREN);)0!=e.length&&this._require(r.COMMA),e.push(this._parseExpression());return e}_expectAny(...e){const r=this._next();return e.includes(r.type)?(this.tokens.next(),r):null}_require(e){const r=this._expectAny(e);if(null===r)throw new ParsingError(`Expected ${e}, got ${this.tokens.peek().type} instead`);return r}_next(){let e=this.tokens.peek();for(;e.type===r.WHITESPACE;)this.tokens.next(),e=this.tokens.peek();return e}_getReferences(e){switch(e.constructor){case Value:return[];case Reference:return[i(e.col,e.row)];case UnaryOp:return this._getReferences(e.value);case BinaryOp:return[...this._getReferences(e.left),...this._getReferences(e.right)];case FunctionCall:return e.args.flatMap(e=>this._getReferences(e));case Range:return t(e.from,e.to).map(e=>i(e.col,e.row));default:throw new ParsingError(`Unknown expression type: ${typeof e}`)}}}class Evaluator{constructor(){this.visitedCellStack=[]}evaluateCellAt(e,r,t){if(this.visitedCellStack.includes(e))throw new RuntimeError(`Circular reference detected (${this.visitedCellStack.join(" -> ")} -> ${e})`);this.visitedCellStack.push(e);const n=this._evaluateCell(r,t);return this.visitedCellStack.pop(),n}evaluateQuery(e,r){return this._evaluateCell(e,r)}_evaluateCell(e,r){switch(e.constructor){case Value:return e.value;case Reference:return this._evaluateReference(i(e.col,e.row),r);case UnaryOp:return this._evaluateUnary(e.op,e.value,r);case BinaryOp:return this._evaluateBinary(e.left,e.op,e.right,r);case FunctionCall:return this._evaluateFunction(e.functionName,e.args,r);case Range:throw new RuntimeError("Range references are allowed only as arguments of functions");default:throw new RuntimeError(`Unknown expression type: ${typeof e}`)}}_evaluateReference(e,r){try{return r.getValue(e)}catch(r){throw r instanceof ParsingError?new RuntimeError(`Error in referenced cell: ${e}`):r}}_evaluateExpression(e,r){switch(e.constructor){case Range:return this._evaluateRange(e.from,e.to,r);default:return this._evaluateCell(e,r)}}_evaluateUnary(e,r,t){const n=this._evaluateCell(r,t);switch(e){case"+":return n;case"-":return-n;default:throw new RuntimeError(`Unknown unary operator: '${e}'`)}}_evaluateBinary(e,r,t,n){const s=this._evaluateCell(e,n),i=this._evaluateCell(t,n);switch(r){case"+":return s+i;case"-":return s-i;case"*":return s*i;case"/":return s/i;default:throw new RuntimeError(`Unknown binary operator: '${r}'`)}}_evaluateFunction(e,r,t){const n=r.map(e=>this._evaluateExpression(e,t)),s=t.getFunction(e);try{return s(...n)}catch(r){throw new RuntimeError(`Error in function ${e}: ${r}`)}}_evaluateRange(e,r,n){return t(e,r).map(e=>i(e.col,e.row)).map(e=>this._evaluateReference(e,n))}}class ReferencesMap{constructor(){this._referencesFrom={},this._referencesTo={}}getReferencesFrom(e){return this._referencesFrom[e]}getReferencesTo(e){return this._referencesTo[e]}addReference(e,r){this._referencesFrom[e]||(this._referencesFrom[e]=[]),this._referencesFrom[e].push(r),this._referencesTo[r]||(this._referencesTo[r]=[]),this._referencesTo[r].push(e)}removeReferencesFrom(e){const r=this._referencesFrom[e];for(let t of r){const r=this._referencesTo[t].indexOf(e);r>-1&&this._referencesTo[t].splice(r,1)}delete this._referencesFrom[e]}getAffectedCells(e){const r=this.getReferencesTo(e);if(!r)return[];const t=r.flatMap(this.getAffectedCells.bind(this));return[...r,...t]}}class Environment{constructor(e={},r={}){this.cells=e,this.functions=r,this._parser=new Parser(new Tokenizer),this._evaluator=new Evaluator,this._expressionsCache={},this._valuesCache={},this._referencesMap=new ReferencesMap}getText(e){return this.cells.hasOwnProperty(e)?this.cells[e].toString():""}setText(e,r){this.cells[e]=r,delete this._valuesCache[e];for(let r of this._referencesMap.getAffectedCells(e))delete this._valuesCache[r];delete this._expressionsCache[e],this._referencesMap.getReferencesFrom(e)&&this._referencesMap.removeReferencesFrom(e)}getExpression(e){if(this._expressionsCache.hasOwnProperty(e))return this._expressionsCache[e];const r=this.cells.hasOwnProperty(e)?this.cells[e]:null,{parsed:t,references:n}=this._parser.parse(r);this._expressionsCache[e]=t;for(let r of n)this._referencesMap.addReference(e,r);return t}getValue(e){if(this._valuesCache.hasOwnProperty(e))return this._valuesCache[e];const r=this._evaluator.evaluateCellAt(e,this.getExpression(e),this);return this._valuesCache[e]=r,r}evaluateQuery(e){const{parsed:r,_:t}=this._parser.parse(e);return this._evaluator.evaluateQuery(r,this)}getFunction(e){if(void 0===this.functions[e])throw new RuntimeError(`Unknown function: ${e} is not a function`);return this.functions[e]}}const c={SUM:(...e)=>{let r=0;for(let t of e.flat())if("number"==typeof t)r+=t;else if(null!=t)throw new Error(`${typeof t} is not a valid argument to SUM(). Expected number, number[], null or undefined.`);return r},AVERAGE:(...e)=>{let r=0,t=0;for(let n of e.flat())if("number"==typeof n)r+=n,t++;else if(null!=n)throw new Error(`${typeof n} is not a valid argument to AVERAGE().`);return r/t}};e.Helpers=u,e.ParsingError=ParsingError,e.RuntimeError=RuntimeError,e.Spreadsheet=class Spreadsheet{constructor(e={},r=c){this.cells=e,this._environment=new Environment(this.cells,r)}text(e){return this._environment.getText(e)}set(e,r){this._environment.setText(e,r)}value(e){return this._environment.getValue(e)}query(e){return this._environment.evaluateQuery(e)}},e.SpreadsheetError=SpreadsheetError,e.builtinFunctions=c,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=simple-spreadsheet.min.js.map
